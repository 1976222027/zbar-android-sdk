apply plugin: rootProject.ext.plugins.library
//apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'com.jfrog.bintray'
//apply plugin: 'com.novoda.bintray-release'//jcent
apply plugin: 'maven'
apply plugin: 'maven-publish'//jitpack
apply plugin: 'com.jfrog.artifactory'
/*****************jitpack***************/
def VERSION = '1.0.0'
def GROUP = 'com.github.mahongyin'
def ART_ID = "camera"//project.getName()
group = GROUP
version = VERSION
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = GROUP
                artifactId = ART_ID
                version = VERSION
            }
        }
    }
}


def MAVEN_LOCAL_PATH ='http://tencent.a1000.top:8082/artifactory/local'
def ARTIFACT_ID = "camera"//project.getName()
def VERSION_NAME = '1.0.0'
def GROUP_ID = 'com.mahongyin.zbar'

//uploadArchives {
//    repositories {
//        mavenDeployer {
//            repository(url:MAVEN_LOCAL_PATH ){
//                authentication(userName: "${MAVEN_USER}", password:"${MAVEN_PASSWORD}")
//            }
//            pom.project {
//                groupId GROUP_ID
//                artifactId ARTIFACT_ID
//                version VERSION_NAME
//                packaging 'aar'
//            }
//        }
//    }
//}
//gradlew clean assembleRelease artifactoryPublish --stacktrace --info
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.libraryMinSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    resourcePrefix 'zbar_'

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            aidl.srcDirs = ['src/main/aidl']
            assets.srcDirs = ['src/main/assets']
            jni.srcDirs = ['src/main/jni']
            jniLibs.srcDirs = ['src/main/jniLibs']
            resources.srcDirs = ['src/main/resources']
            renderscript.srcDirs = ['src/main/rs']
        }
    }
}
//jcent
//publish {
//    repoName = 'maven'//maven仓库名
//    userOrg = 'mahongyin'// 用户所在组织,好像是用户名
//    groupId = 'com.mahongyin.zbar'// 包名
//    artifactId = 'camera'// library项目的名字
//    publishVersion = '1.0.1'// 版本
//    desc = 'build zbar camera'//不中文
//    website = "https://github.com/1976222027/zbar-android-sdk"//你的开源地址，注意，一定要用GitHub地址
//}
//gradlew clean build bintrayUpload -PbintrayUser=mahongyin -PbintrayKey=KEY -PdryRun=false

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':zbar')
//    implementation  'com.mahongyin:zbar:1.0.0'
}

//def packageName = 'com.mahongyin.zbar'
//def libraryVersion = '1.0.0'
//publishing {
//    publications {
//        aar(MavenPublication) {
//            groupId packageName //   一般为包名
//            version = libraryVersion //  当前library版本号
//            artifactId project.getName() // 一般为library module名字
//            // Tell maven to prepare the generated "*.aar" file for publishing
//            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
//        }
//    }
//}
//artifactory {
//    contextUrl = 'http://tencent.a1000.top:8082/artifactory'  // 表示要发布到哪里去，上下文连接
//    publish {
//        repository {
//            repoKey = 'local'  // artifactory/local分支，可在artifactory查看 libs-release-local
//            username = "${MAVEN_USER}"  // artifactory 默认管理员
//            password = "${MAVEN_PASSWORD}"  // artifactory 默认管理员密码
//        }
//        defaults {
//            publications('aar')  // 表示要发布的文件类型
//            publishArtifacts = true
//            properties = ['qa.level': 'basic', 'dev.team': 'core']
//            publishPom = true  // 是否将自动生成的pom.xml文件发布到Artifactory
//        }
//    }
//}
//gradlew assembleRelease artifactoryPublish